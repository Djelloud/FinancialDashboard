// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  passwordHash  String
  firstName     String
  lastName      String
  avatarUrl     String?
  emailVerified Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  accounts   Account[]
  categories Category[]
  budgets    Budget[]
  goals      Goal[]

  @@map("users")
}

model Account {
  id             String      @id @default(cuid())
  userId         String
  accountName    String
  accountType    AccountType
  bankName       String
  balance        Float       @default(0)
  plaidAccountId String?
  isActive       Boolean     @default(true)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("accounts")
}

model Category {
  id               String   @id @default(cuid())
  userId           String
  name             String
  color            String
  icon             String
  parentCategoryId String?
  isSystemCategory Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  parentCategory Category?     @relation("CategoryHierarchy", fields: [parentCategoryId], references: [id])
  subCategories  Category[]    @relation("CategoryHierarchy")
  transactions   Transaction[]
  budgets        Budget[]

  @@map("categories")
}

model Transaction {
  id                 String          @id @default(cuid())
  accountId          String
  categoryId         String?
  amount             Float
  description        String
  transactionDate    DateTime
  merchantName       String?
  transactionType    TransactionType
  isRecurring        Boolean         @default(false)
  receiptUrl         String?
  plaidTransactionId String?
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt

  // Relations
  account  Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id])

  @@map("transactions")
}

model Budget {
  id         String       @id @default(cuid())
  userId     String
  categoryId String?
  amount     Float
  period     BudgetPeriod
  startDate  DateTime
  endDate    DateTime
  isActive   Boolean      @default(true)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id])

  @@map("budgets")
}

model Goal {
  id            String   @id @default(cuid())
  userId        String
  name          String
  targetAmount  Float
  currentAmount Float    @default(0)
  targetDate    DateTime
  category      String
  isCompleted   Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}

// Enums
enum AccountType {
  CHECKING
  SAVINGS
  CREDIT
  INVESTMENT
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum BudgetPeriod {
  MONTHLY
  YEARLY
}
